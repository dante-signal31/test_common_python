name: test_and_deploy

on:
    push:
      branches: [ staging ]
    pull_request:
      branches: [ staging ]

    workflow_dispatch:

jobs:
    unit-tests:
      runs-on: ubuntu-latest
      # Try last python version but don't stop workflow if it fails.
      continue-on-error: ${{ matrix.experimental }}
      strategy:
        matrix:
          python-version: ["3.8", "3.9"]
          experimental: [false]
          include:
            - python-version: "nightly"
              experimental: true

      steps:
        - name: Get source code from repository.
          uses: actions/checkout@v2

        - name: Set up Python ${{ matrix.python_version }}
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version}}

        - name: Install pytest and dependencies.
          run: |
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
            pip install codecov pytest-cov

        - name: Run unit-tests.
          run: |
            python -m pytest -v -n auto --cov-report=xml --cov=test_common

        - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v2
          with:
            directory: ./coverage/reports/
            files: ./coverage1.xml,./coverage2.xml
            flags: unittests
            name: codecov-umbrella
            path_to_write_report: ./coverage/codecov_report.txt
            verbose: true

    merge-master:
      runs-on: ubuntu-latest
      needs: unit-tests
      steps:
        - name: Get source code from repository.
          uses: actions/checkout@v2

        - name: Merge staging with master.
          uses: devmasx/merge-branch@master
          with:
            type: now
            from_branch: staging
            target_branch: merge
            github_token: ${{ secrets.GITHUB_TOKEN }}

    pypi-deploy:
      runs-on: ubuntu-latest
      needs: unit-tests
      steps:
        - name: Get source code from repository.
          uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.9'

        - name: Install dependencies
          run: |
              python -m pip install --upgrade pip setuptools wheel
              pip install build

        - name: Build package
          run: python -m build

        - name: Publish package
          uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
          with:
            user: __token__
            password: ${{ secrets.PYPI_TEST_COMMON }}